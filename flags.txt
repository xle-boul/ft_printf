CHARACTERS

c / % = character

d / i = signed int

s = string

p = pointer address

u = unsigned int

x = unsigned hexadecimal int

X = unsigned hexadecimal int (CAP LETTERS) ?

---------------------------------------------------

FLAGS

' ' = adds a white space before printing a positive integer - equalizes with the '-' space taken if negative

'#' = usable with X and x, adds 0x as a prefix

'number' = MINIMUM WIDTH padding (to the right). Fills the gap with white spaces. If first number is 0, it is taken as a flag.

'-' = puts the padding to the left

'0' = transforms the white spaces of paddings into 0

'+' = prints the + of a number

'.' = used in a string: trims to 'x' characters -> TAKES INTO ACCOUNT THE NUMBER FOLLOWING. IF NO NUMBER, NUMBER = 0
		if the number begins with a 0, it is taken into account as a number, not as a flag